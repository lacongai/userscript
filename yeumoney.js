
(function() {
    'use strict';
    
    console.log("[Auto Vi·ªát Nam] Kh·ªüi ƒë·ªông giao di·ªán m·ªõi - Ch√†o anh ae ! üáªüá≥");
    console.log(`[Auto] Th·ªùi gian hi·ªán t·∫°i: 15/08/2025 - 11:55:47 (UTC)`);
    
    // ====== C·∫§U H√åNH 5 TRANG WEB + L∆ØU TR·ªÆ + ∆ØU TI√äN N√öT ======
    let selectedSite = localStorage.getItem('vnAutoSelectedSite') || '188bet';
    let preferredButton = localStorage.getItem('vnAutoPreferredButton') || 'red'; // red ho·∫∑c green
    let searchCompleted = false;
    let clickCompleted = false;
    let autoSearchStarted = false;
    let isMenuMinimized = localStorage.getItem('vnMenuMinimized') === 'true';
    let isCasinoMinimized = localStorage.getItem('vnCasinoMinimized') === 'true';
    
    const siteConfigs = {
        'M88': {
            keyword: 'm88',
            exactDomain: 'm88.com',
            backupDomains: ['m88asia.com', 'm88mansion.com'],
            displayName: 'üé∞ M88',
            targetUrl: 'https://m88.com'
        },
        '188bet': {
            keyword: '188bet',
            exactDomain: '88bettp.com',
            backupDomains: ['188bet.com'],
            displayName: 'üé≤ 188bet',
            targetUrl: 'https://88bettp.com'
        },
        'VN88': {
            keyword: 'vn88',
            exactDomain: 'vn88lu.com',
            backupDomains: ['vn88.com', 'vn88.net'],
            displayName: 'üéÆ VN88',
            targetUrl: 'https://vn88lu.com'
        },
        'V9bet': {
            keyword: 'v9bet',
            exactDomain: 'v9betgc.com',
            backupDomains: ['v9bet.com', 'v9bet.net'],
            displayName: 'üöÄ V9bet',
            targetUrl: 'https://v9betgc.com'
        },
        'FB88': {
            keyword: 'fb88',
            exactDomain: 'fb88eo.com',
            backupDomains: ['fb88.com', 'fb88.net'],
            displayName: '‚ö° FB88',
            targetUrl: 'https://fb88eo.com/'
        }
    };
    
    const buttonPreference = {
        'red': {
            name: 'üî¥ N√∫t ƒê·ªè',
            emoji: 'üî¥',
            description: '∆Øu ti√™n n√∫t ƒë·ªè tr∆∞·ªõc'
        },
        'green': {
            name: 'üü¢ N√∫t Xanh', 
            emoji: 'üü¢',
            description: '∆Øu ti√™n n√∫t xanh tr∆∞·ªõc'
        }
    };
    
    // ====== H√ÄM L∆ØU TR·ªÆ C√ÄI ƒê·∫∂T N√ÇNG C·∫§P ======
    function saveSiteSelection(site) {
        localStorage.setItem('vnAutoSelectedSite', site);
        console.log(`[L∆∞u tr·ªØ] ƒê√£ l∆∞u l·ª±a ch·ªçn casino: ${site}`);
    }
    
    function saveButtonPreference(buttonType) {
        localStorage.setItem('vnAutoPreferredButton', buttonType);
        console.log(`[L∆∞u tr·ªØ] ƒê√£ l∆∞u ∆∞u ti√™n n√∫t: ${buttonPreference[buttonType].name}`);
    }
    
    function saveMenuState(isMinimized) {
        localStorage.setItem('vnMenuMinimized', isMinimized.toString());
        console.log(`[L∆∞u tr·ªØ] Menu thu nh·ªè: ${isMinimized}`);
    }
    
    function saveCasinoState(isMinimized) {
        localStorage.setItem('vnCasinoMinimized', isMinimized.toString());
        console.log(`[L∆∞u tr·ªØ] Casino thu nh·ªè: ${isMinimized}`);
    }
    
    function loadLastSession() {
        const lastSite = localStorage.getItem('vnAutoSelectedSite');
        const lastButton = localStorage.getItem('vnAutoPreferredButton');
        const lastUsed = localStorage.getItem('vnLastUsedTime');
        
        if (lastSite && lastUsed) {
            const timeDiff = Date.now() - parseInt(lastUsed);
            const hoursDiff = timeDiff / (1000 * 60 * 60);
            
            console.log(`[Phi√™n] L·∫ßn cu·ªëi s·ª≠ d·ª•ng: ${hoursDiff.toFixed(1)} gi·ªù tr∆∞·ªõc`);
            console.log(`[Phi√™n] Casino ƒë√£ ch·ªçn: ${lastSite}`);
            console.log(`[Phi√™n] N√∫t ∆∞u ti√™n: ${buttonPreference[lastButton || 'red'].name}`);
            
            return {
                site: lastSite,
                button: lastButton || 'red',
                timeDiff: hoursDiff
            };
        }
        
        return null;
    }
    
    function saveSession() {
        localStorage.setItem('vnLastUsedTime', Date.now().toString());
        console.log(`[Phi√™n] ƒê√£ l∆∞u th·ªùi gian s·ª≠ d·ª•ng`);
    }
    
    // ====== H√ÄM K√âO TH·∫¢ - T·ªêI ∆ØU ======
    function makeElementDraggable(element) {
        let isDragging = false;
        let startX, startY, startLeft, startTop;
        
        let dragHandle = element.querySelector('.drag-handle');
        if (!dragHandle) {
            dragHandle = element;
        }
        
        dragHandle.style.cursor = 'move';
        dragHandle.style.userSelect = 'none';
        
        dragHandle.addEventListener('mousedown', function(e) {
            e.preventDefault();
            isDragging = true;
            
            startX = e.clientX;
            startY = e.clientY;
            startLeft = parseInt(window.getComputedStyle(element).left, 10) || 0;
            startTop = parseInt(window.getComputedStyle(element).top, 10) || 0;
            
            element.style.zIndex = '99999999';
            dragHandle.style.cursor = 'grabbing';
        });
        
        document.addEventListener('mousemove', function(e) {
            if (!isDragging) return;
            
            e.preventDefault();
            
            const deltaX = e.clientX - startX;
            const deltaY = e.clientY - startY;
            
            const newLeft = startLeft + deltaX;
            const newTop = startTop + deltaY;
            
            const maxLeft = window.innerWidth - element.offsetWidth;
            const maxTop = window.innerHeight - element.offsetHeight;
            
            element.style.left = Math.max(0, Math.min(newLeft, maxLeft)) + 'px';
            element.style.top = Math.max(0, Math.min(newTop, maxTop)) + 'px';
        });
        
        document.addEventListener('mouseup', function() {
            if (isDragging) {
                isDragging = false;
                dragHandle.style.cursor = 'move';
            }
        });
    }
    
    // ====== PH·∫¶N GOOGLE - GIAO DI·ªÜN M·ªöI + L∆ØU TR·ªÆ ======
    let isGooglePage = window.location.hostname.includes('google.com');
    
    if (isGooglePage) {
        console.log("[Auto] ƒêang tr√™n Google - t·∫°o menu v·ªõi l∆∞u tr·ªØ cho anh doanhvipqq");
        
        // Load phi√™n cu·ªëi
        const lastSession = loadLastSession();
        if (lastSession) {
            selectedSite = lastSession.site;
            preferredButton = lastSession.button;
            console.log(`[Phi√™n] Kh√¥i ph·ª•c: ${selectedSite} + ${buttonPreference[preferredButton].name}`);
        }
        
        function createFiveSiteMenu() {
            if (document.getElementById('vn-five-sites-menu')) return;
            
            const menu = document.createElement('div');
            menu.id = 'vn-five-sites-menu';
            menu.style.cssText = `
                position: fixed;
                top: 70px;
                right: 40px;
                z-index: 9999999;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                border-radius: 15px;
                color: #fff;
                font-family: 'Segoe UI', Arial, sans-serif;
                font-weight: 600;
                font-size: 14px;
                box-shadow: 0 10px 30px rgba(0,0,0,0.4);
                backdrop-filter: blur(20px);
                border: 2px solid rgba(255,255,255,0.15);
                overflow: hidden;
                transition: all 0.3s ease;
                min-width: 340px;
                max-width: 340px;
            `;
            
            const currentTime = new Date().toLocaleString('vi-VN');
            const sessionInfo = lastSession ? 
                `L·∫ßn cu·ªëi: ${lastSession.timeDiff.toFixed(1)}h tr∆∞·ªõc` : 
                'Phi√™n m·ªõi';
            
            menu.innerHTML = `
                <div class="drag-handle" style="
                    background: linear-gradient(135deg, #4a5568, #2d3748);
                    padding: 12px 18px;
                    text-align: center;
                    cursor: move;
                    user-select: none;
                    border-bottom: 1px solid rgba(255,255,255,0.1);
                    position: relative;
                ">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <div style="flex: 1; text-align: center;">
                            <div id="five-menu-title" style="font-size: 16px; margin-bottom: 4px; text-shadow: 0 1px 3px rgba(0,0,0,0.5);">
                                üéØ B√≥ng X
                            </div>
                            <div id="five-menu-subtitle" style="font-size: 11px; opacity: 0.85; color: #FFD700;">
                                K√©o ƒë·ªÉ di chuy·ªÉn
                            </div>
                        </div>
                        <button id="five-minimize-btn" style="
                            background: linear-gradient(45deg, #FF6B6B, #4ECDC4);
                            border: none;
                            color: #fff;
                            padding: 6px 10px;
                            border-radius: 8px;
                            cursor: pointer;
                            font-size: 11px;
                            font-weight: bold;
                            transition: all 0.3s ease;
                            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
                        ">
                            ${isMenuMinimized ? 'üéØ' : '‚ûñ'}
                        </button>
                    </div>
                </div>
                <div id="five-menu-content" style="padding: 16px; ${isMenuMinimized ? 'display: none;' : ''}">
                    <div style="text-align:center; margin-bottom:12px; font-size:13px; background:rgba(255,255,255,0.1); padding:10px; border-radius:8px; border: 1px solid rgba(255,255,255,0.2);">
                        Xin ch√†o <strong style="color:#FFD700; font-size: 14px;">doanhvipqq</strong>! üëã<br>
                        <small>15/08/2025 - 11:55:47</small><br>
                        <small style="color:#90EE90;">üíæ ${sessionInfo}</small>
                    </div>
                    
                    <div style="margin-bottom:15px;">
                        <div style="margin-bottom:8px; font-size:13px; color:#FFD700;">
                            üìå Ch·ªçn casino (ƒë√£ l∆∞u: <strong>${siteConfigs[selectedSite].displayName}</strong>):
                        </div>
                        <select id="five-site-picker" style="
                            width: 100%; 
                            padding: 12px; 
                            font-size: 14px; 
                            border: none; 
                            border-radius: 10px; 
                            background: #fff; 
                            color: #333;
                            font-weight: 600;
                            box-shadow: 0 3px 12px rgba(0,0,0,0.2);
                            cursor: pointer;
                        ">
                            <option value="M88">üé∞ M88 ‚Üí m88.com</option>
                            <option value="188bet">üé≤ 188bet ‚Üí 88bettp.com</option>
                            <option value="VN88">üéÆ VN88 ‚Üí vn88lu.com</option>
                            <option value="V9bet">üöÄ V9bet ‚Üí v9betgc.com</option>
                            <option value="FB88">‚ö° FB88 ‚Üí fb88eo.com</option>
                        </select>
                    </div>
                    
                    <div style="margin-bottom:15px;">
                        <div style="margin-bottom:8px; font-size:13px; color:#FFD700;">
                            üéØ ∆Øu ti√™n n√∫t (ƒë√£ l∆∞u: <strong>${buttonPreference[preferredButton].name}</strong>):
                        </div>
                        <div style="display: flex; gap: 8px;">
                            <button id="btn-prefer-red" style="
                                flex: 1;
                                padding: 10px;
                                font-size: 13px;
                                border: 2px solid ${preferredButton === 'red' ? '#FFD700' : 'rgba(255,255,255,0.3)'};
                                border-radius: 10px;
                                background: ${preferredButton === 'red' ? 'linear-gradient(45deg, #FF6B6B, #FF4757)' : 'rgba(255,255,255,0.1)'};
                                color: #fff;
                                font-weight: bold;
                                cursor: pointer;
                                transition: all 0.3s ease;
                                text-shadow: 0 1px 3px rgba(0,0,0,0.5);
                            ">
                                üî¥ N√∫t ƒê·ªè<br>
                                <small style="font-size: 10px; opacity: 0.9;">∆Øu ti√™n ƒë·ªè</small>
                            </button>
                            <button id="btn-prefer-green" style="
                                flex: 1;
                                padding: 10px;
                                font-size: 13px;
                                border: 2px solid ${preferredButton === 'green' ? '#FFD700' : 'rgba(255,255,255,0.3)'};
                                border-radius: 10px;
                                background: ${preferredButton === 'green' ? 'linear-gradient(45deg, #2ECC71, #27AE60)' : 'rgba(255,255,255,0.1)'};
                                color: #fff;
                                font-weight: bold;
                                cursor: pointer;
                                transition: all 0.3s ease;
                                text-shadow: 0 1px 3px rgba(0,0,0,0.5);
                            ">
                                üü¢ N√∫t Xanh<br>
                                <small style="font-size: 10px; opacity: 0.9;">∆Øu ti√™n xanh</small>
                            </button>
                        </div>
                    </div>
                    
                    <div style="text-align:center; margin-bottom: 15px;">
                        <button id="five-search-btn" style="
                            background: linear-gradient(45deg, #FF6B6B, #4ECDC4); 
                            color: white; 
                            border: none; 
                            padding: 12px 20px; 
                            border-radius: 25px; 
                            font-size: 14px; 
                            font-weight: bold; 
                            cursor: pointer;
                            box-shadow: 0 4px 15px rgba(0,0,0,0.3);
                            transition: all 0.3s ease;
                            text-transform: uppercase;
                            letter-spacing: 1px;
                            width: 100%;
                        ">
                            üöÄ T√åM + T·ª∞ ƒê·ªòNG
                        </button>
                    </div>
                    <div id="five-status-info" style="
                        text-align: center; 
                        font-size: 12px; 
                        background: rgba(255,255,255,0.15); 
                        padding: 12px; 
                        border-radius: 10px;
                        min-height: 20px;
                        border: 1px solid rgba(255,255,255,0.2);
                    ">
                        ‚úÖ S·∫µn s√†ng: <strong>${siteConfigs[selectedSite].displayName}</strong> + <strong>${buttonPreference[preferredButton].name}</strong>!<br>
                        <small style="opacity:0.9; color:#FFD700;">üíæ C√†i ƒë·∫∑t ƒë√£ ƒë∆∞·ª£c l∆∞u t·ª± ƒë·ªông</small>
                    </div>
                    <div style="text-align: center; margin-top: 12px; font-size: 10px; opacity: 0.7; background: rgba(255,255,255,0.08); padding: 6px; border-radius: 6px;">
                        üí° <strong>M·ªöI:</strong> L·ª±a ch·ªçn ∆∞u ti√™n n√∫t ƒê·ªè/Xanh + L∆∞u tr·ªØ<br>
                        üöÄ V9bet & FB88 | üíæ Auto l∆∞u t·∫•t c·∫£ c√†i ƒë·∫∑t
                    </div>
                </div>
            `;
            
            document.body.appendChild(menu);
            makeElementDraggable(menu);
            
            // √Åp d·ª•ng tr·∫°ng th√°i thu nh·ªè ƒë√£ l∆∞u
            if (isMenuMinimized) {
                const menuContent = document.getElementById('five-menu-content');
                const menuTitle = document.getElementById('five-menu-title');
                const menuSubtitle = document.getElementById('five-menu-subtitle');
                
                menuContent.style.display = 'none';
                menuTitle.style.display = 'none';
                menuSubtitle.style.display = 'none';
                menu.style.minWidth = '45px';
                menu.style.maxWidth = '45px';
                menu.style.width = '45px';
                menu.style.height = '45px';
            }
            
            // Thu nh·ªè menu - SI√äU G·ªåNG + L∆ØU TR·ªÆ
            const fiveMinimizeBtn = document.getElementById('five-minimize-btn');
            const menuContent = document.getElementById('five-menu-content');
            const menuTitle = document.getElementById('five-menu-title');
            const menuSubtitle = document.getElementById('five-menu-subtitle');
            
            fiveMinimizeBtn.onclick = function(e) {
                e.stopPropagation();
                
                if (isMenuMinimized) {
                    // M·ªü r·ªông
                    menuContent.style.display = 'block';
                    menu.style.minWidth = '340px';
                    menu.style.maxWidth = '340px';
                    menu.style.width = '340px';
                    menu.style.height = 'auto';
                    menuTitle.style.display = 'block';
                    menuSubtitle.style.display = 'block';
                    fiveMinimizeBtn.innerHTML = '‚ûñ';
                    fiveMinimizeBtn.style.padding = '6px 10px';
                    fiveMinimizeBtn.style.fontSize = '11px';
                    isMenuMinimized = false;
                    saveMenuState(false);
                    console.log('[Thu nh·ªè] ƒê√£ m·ªü r·ªông menu + l∆∞u tr·∫°ng th√°i');
                } else {
                    // Thu nh·ªè SI√äU G·ªåNG
                    menuContent.style.display = 'none';
                    menuTitle.style.display = 'none';
                    menuSubtitle.style.display = 'none';
                    menu.style.minWidth = '45px';
                    menu.style.maxWidth = '45px';
                    menu.style.width = '45px';
                    menu.style.height = '45px';
                    fiveMinimizeBtn.innerHTML = 'üéØ';
                    fiveMinimizeBtn.style.padding = '3px';
                    fiveMinimizeBtn.style.fontSize = '18px';
                    isMenuMinimized = true;
                    saveMenuState(true);
                    console.log('[Thu nh·ªè] ƒê√£ thu si√™u nh·ªè menu + l∆∞u tr·∫°ng th√°i');
                }
            };
            
            // Hover effect cho n√∫t thu nh·ªè
            fiveMinimizeBtn.addEventListener('mouseenter', function() {
                this.style.transform = 'scale(1.1)';
            });
            
            fiveMinimizeBtn.addEventListener('mouseleave', function() {
                this.style.transform = 'scale(1)';
            });
            
            // G√°n s·ª± ki·ªán v·ªõi l∆∞u tr·ªØ
            const sitePicker = document.getElementById('five-site-picker');
            const searchBtn = document.getElementById('five-search-btn');
            const btnPreferRed = document.getElementById('btn-prefer-red');
            const btnPreferGreen = document.getElementById('btn-prefer-green');
            
            sitePicker.value = selectedSite; // Kh√¥i ph·ª•c l·ª±a ch·ªçn casino
            
            // S·ª± ki·ªán ch·ªçn casino
            sitePicker.onchange = function() {
                selectedSite = this.value;
                saveSiteSelection(selectedSite); // L∆∞u ngay khi ch·ªçn
                
                const config = siteConfigs[selectedSite];
                updateFiveStatus(`üìå ƒê√£ ch·ªçn ${config.displayName}<br>üéØ Target: <strong>${config.targetUrl}</strong><br>üíæ <small>ƒê√£ l∆∞u t·ª± ƒë·ªông!</small>`);
                searchCompleted = false;
                clickCompleted = false;
                autoSearchStarted = false;
                
                console.log(`[Casino] Chuy·ªÉn sang: ${config.displayName} - ƒê√£ l∆∞u!`);
            };
            
            // S·ª± ki·ªán ch·ªçn ∆∞u ti√™n n√∫t ƒê·ªé
            btnPreferRed.onclick = function() {
                preferredButton = 'red';
                saveButtonPreference('red');
                
                // C·∫≠p nh·∫≠t giao di·ªán
                this.style.border = '2px solid #FFD700';
                this.style.background = 'linear-gradient(45deg, #FF6B6B, #FF4757)';
                btnPreferGreen.style.border = '2px solid rgba(255,255,255,0.3)';
                btnPreferGreen.style.background = 'rgba(255,255,255,0.1)';
                
                updateFiveStatus(`üî¥ ƒê√£ ch·ªçn ∆∞u ti√™n N√∫t ƒê·ªè!<br>üíæ <small>ƒê√£ l∆∞u t·ª± ƒë·ªông!</small>`);
                console.log(`[N√∫t] Chuy·ªÉn sang ∆∞u ti√™n: üî¥ N√∫t ƒê·ªè - ƒê√£ l∆∞u!`);
                
                // Effect
                this.style.transform = 'scale(0.95)';
                setTimeout(() => { this.style.transform = 'scale(1)'; }, 150);
            };
            
            // S·ª± ki·ªán ch·ªçn ∆∞u ti√™n n√∫t XANH
            btnPreferGreen.onclick = function() {
                preferredButton = 'green';
                saveButtonPreference('green');
                
                // C·∫≠p nh·∫≠t giao di·ªán
                this.style.border = '2px solid #FFD700';
                this.style.background = 'linear-gradient(45deg, #2ECC71, #27AE60)';
                btnPreferRed.style.border = '2px solid rgba(255,255,255,0.3)';
                btnPreferRed.style.background = 'rgba(255,255,255,0.1)';
                
                updateFiveStatus(`üü¢ ƒê√£ ch·ªçn ∆∞u ti√™n N√∫t Xanh!<br>üíæ <small>ƒê√£ l∆∞u t·ª± ƒë·ªông!</small>`);
                console.log(`[N√∫t] Chuy·ªÉn sang ∆∞u ti√™n: üü¢ N√∫t Xanh - ƒê√£ l∆∞u!`);
                
                // Effect
                this.style.transform = 'scale(0.95)';
                setTimeout(() => { this.style.transform = 'scale(1)'; }, 150);
            };
            
            // Hover effects cho n√∫t ∆∞u ti√™n
            [btnPreferRed, btnPreferGreen].forEach(btn => {
                btn.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.05)';
                    this.style.boxShadow = '0 4px 15px rgba(0,0,0,0.3)';
                });
                
                btn.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1)';
                    this.style.boxShadow = 'none';
                });
            });
            
            // S·ª± ki·ªán n√∫t T√åM + T·ª∞ ƒê·ªòNG
            searchBtn.onclick = function() {
                const config = siteConfigs[selectedSite];
                const buttonName = buttonPreference[preferredButton].name;
                updateFiveStatus(`üîç ƒêang t√¨m...<br>üéØ <strong>${config.targetUrl}</strong><br>‚ö° ∆Øu ti√™n: <strong>${buttonName}</strong>`);
                autoSearchStarted = true;
                searchCompleted = false;
                clickCompleted = false;
                saveSession(); // L∆∞u th·ªùi gian s·ª≠ d·ª•ng
                setTimeout(startAutoSearch, 1000);
            };
        }
        
        function updateFiveStatus(text) {
            const statusDiv = document.getElementById('five-status-info');
            if (statusDiv) {
                statusDiv.innerHTML = text;
            }
            console.log(`[Tr·∫°ng th√°i] ${text.replace(/<[^>]*>/g, '')}`);
        }
        
        function isValidResult(el) {
            if (!el) return false;
            if (el.closest('[data-text-ad]') || el.closest('.ads-ad')) return false;
            if (/qu·∫£ng c√°o|ad|sponsored/i.test(el.innerText || '')) return false;
            return true;
        }
        
        function autoSelectResult() {
            if (clickCompleted || !autoSearchStarted) return false;
            
            const config = siteConfigs[selectedSite];
            updateFiveStatus(`üîç ƒêang qu√©t...<br>üéØ T√¨m: <strong>${config.exactDomain}</strong>`);
            
            console.log(`[Auto] T·ª± ƒë·ªông qu√©t t√¨m ${selectedSite} cho anh doanhvipqq`);
            
            let allLinks = document.querySelectorAll('a[href]');
            console.log(`[Auto] Qu√©t ${allLinks.length} li√™n k·∫øt`);
            
            // B∆Ø·ªöC 1: ∆Øu ti√™n domain ch√≠nh x√°c
            for (let link of allLinks) {
                if (!link.href) continue;
                
                try {
                    let url = new URL(link.href);
                    let host = url.hostname.replace(/^www\./, '');
                    
                    if (host === config.exactDomain && isValidResult(link)) {
                        console.log(`[Auto] üéØ T√åM TH·∫§Y! ${config.exactDomain}: ${link.href}`);
                        
                        clickCompleted = true;
                        updateFiveStatus(`‚úÖ T√¨m th·∫•y!<br>üéØ <strong>${config.exactDomain}</strong><br>üöÄ Chuy·ªÉn h∆∞·ªõng...`);
                        
                        setTimeout(() => {
                            console.log(`[Auto] üöÄ Chuy·ªÉn ƒë·∫øn: ${link.href}`);
                            window.location.href = link.href;
                        }, 1500);
                        
                        return true;
                    }
                } catch (error) {
                    continue;
                }
            }
            
            // B∆Ø·ªöC 2: Domain d·ª± ph√≤ng
            for (let link of allLinks) {
                if (!link.href) continue;
                
                try {
                    let url = new URL(link.href);
                    let host = url.hostname.replace(/^www\./, '');
                    let text = (link.innerText || '').toLowerCase();
                    
                    const isBackupDomain = config.backupDomains.some(domain => host.includes(domain));
                    const hasKeyword = text.includes(config.keyword.toLowerCase());
                    
                    if ((isBackupDomain || hasKeyword) && isValidResult(link)) {
                        console.log(`[Auto] ‚úÖ Domain d·ª± ph√≤ng: ${host}: ${link.href}`);
                        
                        clickCompleted = true;
                        updateFiveStatus(`‚ö†Ô∏è D·ª± ph√≤ng:<br><strong>${host}</strong><br>üöÄ Chuy·ªÉn h∆∞·ªõng...`);
                        
                        setTimeout(() => {
                            console.log(`[Auto] üöÄ Chuy·ªÉn ƒë·∫øn d·ª± ph√≤ng: ${link.href}`);
                            window.location.href = link.href;
                        }, 1500);
                        
                        return true;
                    }
                } catch (error) {
                    continue;
                }
            }
            
            updateFiveStatus(`‚ùå Ch∆∞a th·∫•y ${config.displayName}<br>üîÑ Ti·∫øp t·ª•c...`);
            return false;
        }
        
        function startAutoSearch() {
            if (searchCompleted && clickCompleted) return;
            
            if (autoSelectResult()) {
                searchCompleted = true;
                return;
            }
            
            let searchBox = document.querySelector('textarea.gLFyf, input[name="q"]');
            if (searchBox && !searchCompleted) {
                const config = siteConfigs[selectedSite];
                
                console.log(`[Auto] Nh·∫≠p t·ª´ kh√≥a: "${config.keyword}"`);
                updateFiveStatus(`üîç Nh·∫≠p t·ª´ kh√≥a...<br>"<strong>${config.keyword}</strong>"`);
                
                searchBox.value = config.keyword;
                searchBox.focus();
                
                searchBox.dispatchEvent(new Event('input', { bubbles: true }));
                searchBox.dispatchEvent(new Event('change', { bubbles: true }));
                
                setTimeout(() => {
                    if (searchBox.form) {
                        searchBox.form.dispatchEvent(new Event('submit', { bubbles: true }));
                    } else {
                        const submitBtn = document.querySelector('button[type="submit"], input[type="submit"]');
                        if (submitBtn) {
                            submitBtn.click();
                        }
                    }
                    
                    searchCompleted = true;
                    updateFiveStatus(`‚è≥ Ch·ªù k·∫øt qu·∫£...<br>üéØ <strong>${config.exactDomain}</strong>`);
                }, 1200);
                
                return true;
            }
            
            return false;
        }
        
        const googleObserver = new MutationObserver(() => {
            createFiveSiteMenu();
            
            if (autoSearchStarted && searchCompleted && !clickCompleted) {
                setTimeout(() => {
                    autoSelectResult();
                }, 2000);
            }
        });
        
        googleObserver.observe(document.body, { childList: true, subtree: true });
        
        setTimeout(() => {
            createFiveSiteMenu();
        }, 1500);
        
        setInterval(() => {
            if (autoSearchStarted && searchCompleted && !clickCompleted) {
                const hasResults = document.querySelector('div.kb0PBd, .yuRUbf, .tF2Cxc, .g');
                if (hasResults) {
                    console.log("[Auto] Ki·ªÉm tra ƒë·ªãnh k·ª≥ - t·ª± ƒë·ªông ch·ªçn...");
                    autoSelectResult();
                }
            }
        }, 3000);
        
        return;
    }
    
    // ====== PH·∫¶N CASINO - GIAO DI·ªÜN M·ªöI + L∆ØU TR·ªÆ + ∆ØU TI√äN N√öT ======
    
    console.log("[Auto] ƒê√£ v√†o casino - kh·ªüi ƒë·ªông panel v·ªõi ∆∞u ti√™n n√∫t cho anh doanhvipqq");
    
    const footerSelectors = [
        'footer a',
        '.footer a', 
        'div[class*="footer"] a',
        'section[class*="footer"] a',
        '[id*="footer"] a',
        '.site-footer a',
        '#footer a',
        '.bottom a',
        '.bottom-area a'
    ];
    
    const postSelectors = [
        'article a',
        '.post a',
        '.entry a',
        '.content a',
        'main a',
        'img.attachment-medium',
        '.wp-post-image',
        '.post-content a',
        '.entry-content a'
    ];
    
    const buttonSelectors = {
        red: 'span.ymn-btn.ymn-btn3, .red-btn, .btn-red, [class*="btn3"]',
        green: 'span.ymn-btn.ymn-btn4, .green-btn, .btn-green, [class*="btn4"]'
    };
    
    const messageText = 'Vui l√≤ng click v√†o link trang b·∫•t k·ª≥ ƒë·ªÉ l·∫•y m√£';
    
    let step1Done = false;
    let step2Done = false;
    let autoLoopRunning = false;
    
    const sleep = ms => new Promise(r => setTimeout(r, ms));
    const randomDelay = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;
    
    function createFiveCasinoPanel() {
        if (document.getElementById('vn-five-casino-panel')) return;
        
        const panel = document.createElement('div');
        panel.id = 'vn-five-casino-panel';
        panel.style.cssText = `
            position: fixed;
            top: 80px;
            left: 60px;
            z-index: 9999999;
            background: linear-gradient(135deg, #DC143C, #B22222);
            border-radius: 15px;
            color: #fff;
            font-weight: 600;
            font-size: 13px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.4);
            backdrop-filter: blur(20px);
            border: 2px solid rgba(255,255,255,0.1);
            overflow: hidden;
            transition: all 0.3s ease;
            min-width: 300px;
            max-width: 300px;
        `;
        
        const currentSite = siteConfigs[selectedSite] ? siteConfigs[selectedSite].displayName : 'Ch∆∞a ch·ªçn';
        const currentButton = buttonPreference[preferredButton].name;
        
        panel.innerHTML = `
            <div class="drag-handle" style="
                background: linear-gradient(135deg, #8B0000, #654321);
                padding: 10px 15px;
                text-align: center;
                cursor: move;
                user-select: none;
                border-bottom: 1px solid rgba(255,255,255,0.1);
            ">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div style="flex: 1; text-align: center;">
                        <div id="five-casino-title" style="font-size: 15px; margin-bottom: 3px;">
                            üî¥ AUTO CLICK
                        </div>
                        <div id="five-casino-subtitle" style="font-size: 10px; opacity: 0.85; color: #FFD700;">
                            K√©o ƒë·ªÉ di chuy·ªÉn
                        </div>
                    </div>
                    <button id="five-casino-minimize-btn" style="
                        background: linear-gradient(45deg, #FF6B6B, #4ECDC4);
                        border: none;
                        color: #fff;
                        padding: 5px 8px;
                        border-radius: 6px;
                        cursor: pointer;
                        font-size: 10px;
                        font-weight: bold;
                        transition: all 0.3s ease;
                    ">
                        ${isCasinoMinimized ? 'üî¥' : '‚ûñ'}
                    </button>
                </div>
            </div>
            <div id="five-casino-content" style="padding: 15px; ${isCasinoMinimized ? 'display: none;' : ''}">
                <div style="font-size:12px; margin-bottom:8px; color:#FFD700; text-align: center;">
                    <strong>Casino:</strong> ${currentSite}<br>
                    <strong>∆Øu ti√™n:</strong> ${currentButton} | <strong>doanhvipqq</strong>
                </div>
                <div id="five-casino-status" style="font-size:12px; padding:10px; background:rgba(255,255,255,0.2); border-radius:10px; border: 1px solid rgba(255,255,255,0.3); text-align: center;">
                    ƒêang kh·ªüi ƒë·ªông auto click v·ªõi ∆∞u ti√™n ${currentButton}...
                </div>
                <div style="text-align: center; margin-top: 10px; font-size: 9px; opacity: 0.75; background: rgba(255,255,255,0.08); padding: 6px; border-radius: 6px;">
                    üí° <strong>M·ªöI:</strong> ∆Øu ti√™n n√∫t ${buttonPreference[preferredButton].emoji} + L∆∞u tr·ªØ<br>
                    üöÄ H·ªó tr·ª£: M88, 188bet, VN88, V9bet, FB88<br>
                    üíæ C√†i ƒë·∫∑t: <strong>${currentSite}</strong> + <strong>${currentButton}</strong>
                </div>
            </div>
        `;
        
        document.body.appendChild(panel);
        makeElementDraggable(panel);
        
        // √Åp d·ª•ng tr·∫°ng th√°i thu nh·ªè ƒë√£ l∆∞u
        if (isCasinoMinimized) {
            const casinoContent = document.getElementById('five-casino-content');
            const casinoTitle = document.getElementById('five-casino-title');
            const casinoSubtitle = document.getElementById('five-casino-subtitle');
            
            casinoContent.style.display = 'none';
            casinoTitle.style.display = 'none';
            casinoSubtitle.style.display = 'none';
            panel.style.minWidth = '40px';
            panel.style.maxWidth = '40px';
            panel.style.width = '40px';
            panel.style.height = '40px';
        }
        
        // Thu nh·ªè casino - SI√äU G·ªåNG + L∆ØU TR·ªÆ
        const fiveCasinoMinimizeBtn = document.getElementById('five-casino-minimize-btn');
        const casinoContent = document.getElementById('five-casino-content');
        const casinoTitle = document.getElementById('five-casino-title');
        const casinoSubtitle = document.getElementById('five-casino-subtitle');
        
        fiveCasinoMinimizeBtn.onclick = function(e) {
            e.stopPropagation();
            
            if (isCasinoMinimized) {
                // M·ªü r·ªông
                casinoContent.style.display = 'block';
                panel.style.minWidth = '300px';
                panel.style.maxWidth = '300px';
                panel.style.width = '300px';
                panel.style.height = 'auto';
                casinoTitle.style.display = 'block';
                casinoSubtitle.style.display = 'block';
                fiveCasinoMinimizeBtn.innerHTML = '‚ûñ';
                fiveCasinoMinimizeBtn.style.padding = '5px 8px';
                fiveCasinoMinimizeBtn.style.fontSize = '10px';
                isCasinoMinimized = false;
                saveCasinoState(false);
                console.log('[Thu nh·ªè] ƒê√£ m·ªü r·ªông panel casino + l∆∞u tr·∫°ng th√°i');
            } else {
                // Thu nh·ªè SI√äU G·ªåNG
                casinoContent.style.display = 'none';
                casinoTitle.style.display = 'none';
                casinoSubtitle.style.display = 'none';
                panel.style.minWidth = '40px';
                panel.style.maxWidth = '40px';
                panel.style.width = '40px';
                panel.style.height = '40px';
                fiveCasinoMinimizeBtn.innerHTML = 'üî¥';
                fiveCasinoMinimizeBtn.style.padding = '2px';
                fiveCasinoMinimizeBtn.style.fontSize = '16px';
                isCasinoMinimized = true;
                saveCasinoState(true);
                console.log('[Thu nh·ªè] ƒê√£ thu si√™u nh·ªè panel casino + l∆∞u tr·∫°ng th√°i');
            }
        };
        
        // Hover effect
        fiveCasinoMinimizeBtn.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.1)';
        });
        
        fiveCasinoMinimizeBtn.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1)';
        });
    }
    
    function updateFiveCasinoStatus(text, color = '#fff') {
        const statusEl = document.getElementById('five-casino-status');
        if (statusEl) {
            statusEl.innerHTML = text;
            statusEl.style.color = color;
        }
        console.log(`[Auto Casino] ${text}`);
    }
    
    async function humanClick(element) {
        if (!element) return false;
        
        try {
            element.scrollIntoView({ behavior: 'smooth', block: 'center' });
            await sleep(randomDelay(800, 1200));
            
            // Highlight ƒë·ªÉ debug
            const originalBg = element.style.backgroundColor;
            element.style.backgroundColor = 'red';
            element.style.border = '2px solid yellow';
            
            console.log(`[Click] ƒêang click: ${element.tagName} - ${element.innerText?.substring(0, 30) || 'No text'}`);
            
            // Multiple click methods
            element.click();
            
            const clickEvent = new MouseEvent('click', {
                view: window,
                bubbles: true,
                cancelable: true,
                button: 0
            });
            element.dispatchEvent(clickEvent);
            
            // Restore style
            setTimeout(() => {
                element.style.backgroundColor = originalBg;
                element.style.border = '';
            }, 1500);
            
            await sleep(randomDelay(500, 800));
            return true;
        } catch (error) {
            console.error('‚ùå L·ªói khi click:', error);
            return false;
        }
    }
    
    async function clickButtonWithPreference() {
        if (step1Done) return;
        
        const preferredType = preferredButton; // 'red' ho·∫∑c 'green'
        const alternativeType = preferredType === 'red' ? 'green' : 'red';
        
        updateFiveCasinoStatus(`üîç T√¨m n√∫t ${buttonPreference[preferredType].name}...`);
        console.log(`[∆Øu ti√™n] T√¨m ${buttonPreference[preferredType].name} tr∆∞·ªõc`);
        
        // B∆Ø·ªöC 1: T√¨m n√∫t ∆∞u ti√™n tr∆∞·ªõc
        let preferredBtn = document.querySelector(buttonSelectors[preferredType]);
        if (preferredBtn) {
            step1Done = true;
            updateFiveCasinoStatus(`‚úÖ Click ${buttonPreference[preferredType].name} OK!`, '#00ff00');
            console.log(`‚úÖ ƒê√£ click n√∫t ∆∞u ti√™n: ${buttonPreference[preferredType].name}`);
            await humanClick(preferredBtn);
            return true;
        }
        
        // B∆Ø·ªöC 2: N·∫øu kh√¥ng c√≥ n√∫t ∆∞u ti√™n, t√¨m n√∫t c√≤n l·∫°i
        let alternativeBtn = document.querySelector(buttonSelectors[alternativeType]);
        if (alternativeBtn) {
            step1Done = true;
            updateFiveCasinoStatus(`‚úÖ Click ${buttonPreference[alternativeType].name} OK! (d·ª± ph√≤ng)`, '#90EE90');
            console.log(`‚úÖ ƒê√£ click n√∫t d·ª± ph√≤ng: ${buttonPreference[alternativeType].name}`);
            await humanClick(alternativeBtn);
            return true;
        }
        
        updateFiveCasinoStatus(`‚è≥ Ch∆∞a th·∫•y n√∫t n√†o...`, '#ffff00');
        return false;
    }
    
    async function clickFooterLinkFixed() {
        if (step2Done) return;
        
        updateFiveCasinoStatus('üîç T√¨m footer link...');
        console.log('[Footer] B·∫Øt ƒë·∫ßu t√¨m footer');
        
        // Scroll xu·ªëng ƒë·ªÉ t√¨m footer
        for (let scroll = 0; scroll < 6; scroll++) {
            window.scrollBy(0, 600);
            await sleep(600);
            
            // Th·ª≠ t·∫•t c·∫£ selector footer
            for (let selector of footerSelectors) {
                let footerLinks = document.querySelectorAll(selector);
                console.log(`[Footer] T√¨m th·∫•y ${footerLinks.length} link v·ªõi selector: ${selector}`);
                
                for (let link of footerLinks) {
                    if (link.href && 
                        !link.href.includes('javascript:') && 
                        !link.href.includes('#') &&
                        !link.href.includes('mailto:') &&
                        link.href !== window.location.href) {
                        
                        console.log(`[Footer] ‚úÖ T√¨m th·∫•y footer link: ${link.href}`);
                        
                        step2Done = true;
                        updateFiveCasinoStatus('‚úÖ Click footer OK!', '#00ff00');
                        await humanClick(link);
                        return true;
                    }
                }
            }
            
            // N·∫øu kh√¥ng c√≥ footer, th·ª≠ post links
            for (let selector of postSelectors) {
                let postLinks = document.querySelectorAll(selector);
                console.log(`[Post] T√¨m th·∫•y ${postLinks.length} link v·ªõi selector: ${selector}`);
                
                for (let link of postLinks) {
                    if (link.href && 
                        !link.href.includes('javascript:') && 
                        !link.href.includes('#') &&
                        !link.href.includes('mailto:') &&
                        link.href !== window.location.href) {
                        
                        console.log(`[Post] ‚úÖ T√¨m th·∫•y post link: ${link.href}`);
                        
                        step2Done = true;
                        updateFiveCasinoStatus('‚úÖ Click post OK!', '#00ff00');
                        await humanClick(link);
                        return true;
                    }
                }
            }
        }
        
        // Fallback: click b·∫•t k·ª≥ link h·ª£p l·ªá n√†o
        const allLinks = document.querySelectorAll('a[href]');
        console.log(`[Fallback] Th·ª≠ click trong ${allLinks.length} link t·ªïng`);
        
        for (let link of allLinks) {
            if (link.href && 
                !link.href.includes('javascript:') && 
                !link.href.includes('#') &&
                !link.href.includes('mailto:') &&
                link.href !== window.location.href &&
                link.href.length > 10) {
                
                console.log(`[Fallback] ‚úÖ Click link b·∫•t k·ª≥: ${link.href}`);
                
                step2Done = true;
                updateFiveCasinoStatus('‚úÖ Click link OK!', '#00ff00');
                await humanClick(link);
                return true;
            }
        }
        
        updateFiveCasinoStatus('‚ùå Kh√¥ng t√¨m th·∫•y link', '#ff0000');
        console.log('[Footer] ‚ùå Kh√¥ng t√¨m th·∫•y link n√†o');
        return false;
    }
    
    function observePageChanges() {
        const observer = new MutationObserver(async () => {
            await sleep(randomDelay(500, 800));
            
            if (document.body.innerText.includes(messageText) && !step2Done) {
                console.log('[Observer] Ph√°t hi·ªán message text, s·∫Ω click footer');
                setTimeout(clickFooterLinkFixed, randomDelay(1000, 2000));
            }
        });
        
        observer.observe(document.body, { childList: true, subtree: true });
    }
    
    async function mainAutoLoop() {
        if (autoLoopRunning) return;
        autoLoopRunning = true;
        
        let attempts = 0;
        const maxAttempts = 25;
        
        const currentButton = buttonPreference[preferredButton].name;
        updateFiveCasinoStatus(`üöÄ Kh·ªüi ƒë·ªông auto v·ªõi ${currentButton}...`);
        
        while ((!step1Done || !step2Done) && attempts < maxAttempts) {
            console.log(`[Loop] V√≤ng ${attempts + 1}/${maxAttempts} - ∆Øu ti√™n: ${currentButton}`);
            
            if (!document.body.innerText.includes(messageText)) {
                console.log('[Loop] ƒêang t√¨m n√∫t v·ªõi ∆∞u ti√™n...');
                await clickButtonWithPreference();
            } else {
                console.log('[Loop] T√¨m footer...');
                await clickFooterLinkFixed();
            }
            
            await sleep(randomDelay(3000, 4000));
            attempts++;
        }
        
        if (step1Done && step2Done) {
            updateFiveCasinoStatus('üéâ HO√ÄN TH√ÄNH!', '#00ff00');
            console.log('üéâ AUTO CASINO HO√ÄN TH√ÄNH!');
        } else {
            updateFiveCasinoStatus('‚ö†Ô∏è Ch∆∞a ho√†n th√†nh', '#FFA500');
            console.log('‚ö†Ô∏è Ch∆∞a ho√†n th√†nh h·∫øt');
        }
        
        autoLoopRunning = false;
    }
    
    // Kh·ªüi ch·∫°y
    window.addEventListener('load', () => {
        setTimeout(() => {
            createFiveCasinoPanel();
            observePageChanges();
            mainAutoLoop();
        }, 3000);
    });
    
    // Debug helper
    window.debugFooter = function() {
        console.log('=== DEBUG FOOTER ===');
        footerSelectors.forEach(selector => {
            const elements = document.querySelectorAll(selector);
            console.log(`${selector}: ${elements.length} elements`);
            elements.forEach((el, i) => {
                console.log(`  ${i}: ${el.href} - "${el.innerText?.substring(0, 30)}"`);
            });
        });
    };
    
    // Debug l∆∞u tr·ªØ n√¢ng c·∫•p
    window.debugStorage = function() {
        console.log('=== DEBUG STORAGE V22 ===');
        console.log('Selected Site:', localStorage.getItem('vnAutoSelectedSite'));
        console.log('Preferred Button:', localStorage.getItem('vnAutoPreferredButton'));
        console.log('Menu Minimized:', localStorage.getItem('vnMenuMinimized'));
        console.log('Casino Minimized:', localStorage.getItem('vnCasinoMinimized'));
        console.log('Last Used Time:', new Date(parseInt(localStorage.getItem('vnLastUsedTime') || '0')));
        console.log('Current Settings:');
        console.log(`  - Casino: ${siteConfigs[selectedSite].displayName}`);
        console.log(`  - Button: ${buttonPreference[preferredButton].name}`);
    };
    
    // H√†m reset c√†i ƒë·∫∑t n√¢ng c·∫•p
    window.resetVnAutoSettings = function() {
        localStorage.removeItem('vnAutoSelectedSite');
        localStorage.removeItem('vnAutoPreferredButton');
        localStorage.removeItem('vnMenuMinimized');
        localStorage.removeItem('vnCasinoMinimized');
        localStorage.removeItem('vnLastUsedTime');
        console.log('‚úÖ ƒê√£ reset t·∫•t c·∫£ c√†i ƒë·∫∑t V22 - reload trang ƒë·ªÉ √°p d·ª•ng!');
        alert('‚úÖ ƒê√£ reset t·∫•t c·∫£ c√†i ƒë·∫∑t!\nBao g·ªìm: Casino, ∆Øu ti√™n n√∫t, Thu nh·ªè\nReload trang ƒë·ªÉ √°p d·ª•ng.');
    };
    
    Object.defineProperty(navigator, 'webdriver', {
        get: () => undefined,
    });
    
    console.log("[Auto Vi·ªát Nam] ‚úÖ Script V22 ho√†n ch·ªânh - ∆ØU TI√äN N√öT ƒê·ªé/XANH + L∆ØU TR·ªÆ!");
    console.log("[Auto] Ch√†o anh doanhvipqq - 15/08/2025 11:55:47 - Giao di·ªán + ∆Øu ti√™n n√∫t!");
    console.log("[Debug] G√µ debugStorage() ƒë·ªÉ xem c√†i ƒë·∫∑t | resetVnAutoSettings() ƒë·ªÉ reset");
    console.log(`[C√†i ƒë·∫∑t] Casino: ${siteConfigs[selectedSite].displayName} | N√∫t: ${buttonPreference[preferredButton].name}`);
    
})();